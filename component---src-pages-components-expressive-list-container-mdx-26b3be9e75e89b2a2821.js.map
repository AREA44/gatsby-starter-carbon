{"version":3,"file":"component---src-pages-components-expressive-list-container-mdx-26b3be9e75e89b2a2821.js","mappings":"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","sources":["webpack://gatsby-starte-carbon/./src/pages/components/ExpressiveListContainer.mdx","webpack://gatsby-starte-carbon/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://gatsby-starte-carbon/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://gatsby-starte-carbon/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://gatsby-starte-carbon/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://gatsby-starte-carbon/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://gatsby-starte-carbon/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://gatsby-starte-carbon/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://gatsby-starte-carbon/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://gatsby-starte-carbon/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://gatsby-starte-carbon/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://gatsby-starte-carbon/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://gatsby-starte-carbon/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://gatsby-starte-carbon/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/gatsby-starter-carbon/gatsby-starter-carbon/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport { Connect } from '@carbon/pictograms-react';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst ExpressiveListContainer = makeShortcode(\"ExpressiveListContainer\");\nconst DoDontExample = makeShortcode(\"DoDontExample\");\nconst Video = makeShortcode(\"Video\");\nconst Title = makeShortcode(\"Title\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The `}<inlineCode parentName=\"p\">{`<ExpressiveListContainer>`}</inlineCode>{` component can be used as a customizable component. `}</p>\n    </PageDescription>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Disclaimer:`}</strong>{` Nested grid support will be supported in v11. Currently this component requires custom styles to nest most of the gatsby components into the container.`}</p>\n    </InlineNotification>\n    <h2>{`Example`}</h2>\n    <ExpressiveListContainer title=\"Short Title\" text=\"Lorem ipsum tempor incididunt ut labore et dolore magna aliqua. Quam lacus suspendisse faucibus interdum posuere lorem. At quis risus sed lorem ipsum vulputate. Orci ac auctor augue mauris augue neque.\" mdxType=\"ExpressiveListContainer\">\n      <DoDontExample type=\"do\" caption=\"Caption\" captionTitle=\"Caption title\" mdxType=\"DoDontExample\">\n  <Video vimeoId=\"310583077\" mdxType=\"Video\" />\n      </DoDontExample>\n    </ExpressiveListContainer>\n    <ExpressiveListContainer title=\"Short Title\" mdxType=\"ExpressiveListContainer\">\n      <Video title=\"Carbon homepage video\" vimeoId=\"322021187\" mdxType=\"Video\" />\n    </ExpressiveListContainer>\n    <h2>{`Code`}</h2>\n    <Title mdxType=\"Title\">Content only</Title>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-mdx\",\n        \"metastring\": \"path=components/ExpressiveListContainer/ExpressiveListContainer.js src=https://github.com/carbon-design-system/gatsby-theme-carbon/tree/main/packages/gatsby-theme-carbon/src/components/ExpressiveListContainer\",\n        \"path\": \"components/ExpressiveListContainer/ExpressiveListContainer.js\",\n        \"src\": \"https://github.com/carbon-design-system/gatsby-theme-carbon/tree/main/packages/gatsby-theme-carbon/src/components/ExpressiveListContainer\"\n      }}>{`<ExpressiveListContainer \n  title=\"Short Title\"\n  text=\"Lorem ipsum tempor incididunt ut labore et dolore magna aliqua. Quam lacus suspendisse faucibus interdum posuere lorem. At quis risus sed lorem ipsum vulputate. Orci ac auctor augue mauris augue neque.\"\n>\n  <DoDontExample type=\"do\" caption=\"Caption\" captionTitle=\"Caption title\">\n    <Video vimeoId=\"310583077\" />\n  </DoDontExample>\n</ExpressiveListContainer>\n\n<ExpressiveListContainer \n  title=\"Short Title\"\n>\n  <Video title=\"Carbon homepage video\" vimeoId=\"322021187\" />\n</ExpressiveListContainer>\n`}</code></pre>\n    <h3>{`Props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`propType`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`contentClassName`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional prop for custom class names this will be applied to the right column.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`children`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`node`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`This prop is used to insert the contents of the container right column`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional prop to insert a custom class name. This class will be applied to the outermost conatiner`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`text`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`node`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional prop to use to insert content text`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`title`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop used for a short title`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`titleType`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`expressive-03`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional prop used for type options - default is `}<inlineCode parentName=\"td\">{`expressive-03`}</inlineCode>{`. Options are: `}<inlineCode parentName=\"td\">{`expressive-04`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`expressive-02`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","InlineNotification","ExpressiveListContainer","DoDontExample","Video","Title","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","kind","title","text","type","caption","captionTitle","vimeoId","isMDXComponent","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils"],"sourceRoot":""}